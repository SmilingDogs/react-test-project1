{"version":3,"sources":["components/Header/Header.js","context/Appreducer.js","context/GlobalState.js","components/City/City.js","components/Country/Country.js","components/Continent/Continent.js","components/Continents/Continents.js","App.js","index.js"],"names":["Header","AppReducer","state","action","type","newClass","connection","initialState","GlobalContext","createContext","GlobalContextProvider","children","useReducer","dispatch","Provider","value","hideNestedAction","showNestedAction","City","cityName","useContext","className","onClick","Country","name","continentRef","setLineLength","lineLength","activeCountry","setActiveCountry","useState","visible","setVisible","useEffect","current","scrollIntoView","map","c","ind","Continent","useRef","ref","item","Continents","continents","info","data","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a17470cc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h1>React test Project</h1>;\r\n};\r\n\r\nexport default Header;\r\n","export const AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"HIDE\":\r\n      return { newClass: \"hide\", connection: \"no-connection\" };\r\n    case \"SHOW\":\r\n      return { newClass: \"\", connection: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { AppReducer } from \"./Appreducer\";\r\n\r\nconst initialState = {\r\n  newClass: \"\",\r\n  connection: \"\",\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const hideNestedAction = () => {\r\n    dispatch({ type: \"HIDE\" });\r\n  };\r\n  const showNestedAction = () => {\r\n    dispatch({ type: \"SHOW\" });\r\n  };\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        newClass: state.newClass,\r\n        connection: state.connection,\r\n        hideNestedAction,\r\n        showNestedAction\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nconst City = ({ cityName }) => {\r\n  const { hideNestedAction } = useContext(GlobalContext);\r\n  return (\r\n    <li className=\"city-name\" onClick={hideNestedAction}>\r\n      {cityName}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default City;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport City from \"../City/City\";\r\n\r\n\r\nconst Country = ({\r\n  name,\r\n  children,\r\n  continentRef,\r\n  setLineLength,\r\n  lineLength,\r\n  activeCountry,\r\n  setActiveCountry,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n\r\n  const toggleContent = () => {\r\n    setVisible(!visible);\r\n    if (visible) setActiveCountry(activeCountry => activeCountry - 1);\r\n    if (!visible) setActiveCountry(activeCountry => activeCountry + 1);\r\n    continentRef.current.scrollIntoView();\r\n  };\r\n\r\n  useEffect(() => {\r\n    switch (activeCountry) {\r\n      case 0:\r\n        setLineLength(\"shortest\");\r\n        break;\r\n      case 1:\r\n        setLineLength(\"short\");\r\n        break;\r\n      case 2:\r\n        setLineLength(\"middle\");\r\n        break;\r\n      case 3:\r\n        setLineLength(\"long\");\r\n        break;\r\n      default:\r\n        setLineLength(\"longest\");\r\n\r\n    }\r\n  }, [activeCountry, setLineLength, lineLength]);\r\n\r\n  return (\r\n    <li>\r\n      <div\r\n        className={visible ? \"country-name\" : \"country-name no-connection\"}\r\n        onClick={toggleContent}\r\n      >\r\n        {name}\r\n      </div>\r\n      <ul className={visible ? \"cities\" : \"hide\"}>\r\n        {children.map((c, ind) => (\r\n          <City key={ind} cityName={c} />\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport Country from \"../Country/Country\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nconst Continent = ({ name, children }) => {\r\n  const continentRef = useRef(null);\r\n  const { newClass, connection, showNestedAction } = useContext(GlobalContext);\r\n  const [visible, setVisible] = useState(false);\r\n  const [lineLength, setLineLength] = useState(\"shortest\");\r\n  const [activeCountry, setActiveCountry] = useState(0);\r\n\r\n  const toggleContent = () => {\r\n    setVisible(!visible);\r\n    showNestedAction()\r\n    continentRef.current.scrollIntoView();\r\n    setLineLength(\"shortest\");\r\n  };\r\n\r\n  return (\r\n    <li className=\"continent\">\r\n      <div\r\n        className={\r\n          visible\r\n            ? `continent-name ${lineLength} ${connection}`\r\n            : \"continent-name no-connection\"\r\n        }\r\n        onClick={toggleContent}\r\n        ref={continentRef}\r\n      >\r\n        {name}\r\n      </div>\r\n      <ul className={visible ? `country ${newClass}` : \"hide\"}>\r\n        {children.map((item, ind) => (\r\n          <Country\r\n            key={ind}\r\n            {...item}\r\n            continentRef={continentRef}\r\n            setLineLength={setLineLength}\r\n            lineLength={lineLength}\r\n            activeCountry={activeCountry}\r\n            setActiveCountry={setActiveCountry}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Continent;\r\n","import React from \"react\";\r\nimport Continent from \"../Continent/Continent\";\r\nimport info from \"../../data.json\";\r\n\r\nconst Continents = () => {\r\n  const { data } = info;\r\n  const continents = data.map((item, ind) => <Continent key={ind} {...item} />);\r\n\r\n  return <ul className=\"main-container\">{continents}</ul>;\r\n};\r\n\r\nexport default Continents;\r\n","import Header from \"./components/Header/Header\";\nimport Continents from \"./components/Continents/Continents\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Continents />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { GlobalContextProvider } from \"./context/GlobalState\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalContextProvider>\n      <App />\n    </GlobalContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}